<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="javax.persistence.GeneratedValue"/>
<fullyQualifiedTypeName name="javax.persistence.GenerationType"/>
<fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
<fullyQualifiedTypeName name="com.zensar.spring.cloud.services.ProductService"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
<fullyQualifiedTypeName name="com.zensar.spring.cloud.repository.ProductRepository"/>
<fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
<fullyQualifiedTypeName name="javax.persistence.Transient"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.EnableDiscoveryClient"/>
<fullyQualifiedTypeName name="org.springframework.http.HttpMethod"/>
<fullyQualifiedTypeName name="com.zensar.spring.cloud.model.Coupon"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.loadbalancer.LoadBalanced"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.DiscoveryClient"/>
<fullyQualifiedTypeName name="org.springframework.cloud.openfeign.FeignClient"/>
<fullyQualifiedTypeName name="com.zensar.spring.cloud.config.CouponClient"/>
<fullyQualifiedTypeName name="org.springframework.cloud.openfeign.EnableFeignClients"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
<fullyQualifiedTypeName name="io.github.resilience4j.retry.annotation.Retry"/>
<fullyQualifiedTypeName name="com.zensar.spring.cloud.model.Product"/>
<fullyQualifiedTypeName name="java.math.BigDecimal"/>
<fullyQualifiedTypeName name="java.lang.Exception"/>
<fullyQualifiedTypeName name="io.github.resilience4j.circuitbreaker.annotation.CircuitBreaker"/>
<fullyQualifiedTypeName name="org.springframework.cloud.config.server.EnableConfigServer"/>
<fullyQualifiedTypeName name="javax.persistence.Entity"/>
<fullyQualifiedTypeName name="javax.persistence.Id"/>
<fullyQualifiedTypeName name="com.zensar.spring.cloud.repository.StudentRepository"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
<fullyQualifiedTypeName name="springfox.documentation.spring.web.plugins.Docket"/>
<fullyQualifiedTypeName name="springfox.documentation.spi.DocumentationType"/>
<fullyQualifiedTypeName name="springfox.documentation.builders.PathSelectors"/>
<fullyQualifiedTypeName name="springfox.documentation.builders.RequestHandlerSelectors"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
<fullyQualifiedTypeName name="springfox.documentation.swagger2.annotations.EnableSwagger2"/>
<fullyQualifiedTypeName name="springfox.documentation.service.ApiInfo"/>
<fullyQualifiedTypeName name="springfox.documentation.service.Contact"/>
<fullyQualifiedTypeName name="java.util.Collections"/>
<fullyQualifiedTypeName name="springfox.documentation.service.VendorExtension"/>
<fullyQualifiedTypeName name="springfox.documentation.builders.ApiInfoBuilder"/>
<fullyQualifiedTypeName name="io.swagger.annotations.ApiOperation"/>
<fullyQualifiedTypeName name="io.swagger.annotations.ApiParam"/>
<fullyQualifiedTypeName name="io.swagger.annotations.ApiModel"/>
<fullyQualifiedTypeName name="io.swagger.annotations.ApiModelProperty"/>
<fullyQualifiedTypeName name="org.springframework.data.mongodb.repository.MongoRepository"/>
<fullyQualifiedTypeName name="com.zensar.spring.cloud.repository.StudentMongoRepository"/>
<fullyQualifiedTypeName name="org.springframework.data.mongodb.core.mapping.Document"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"/>
<fullyQualifiedTypeName name="org.springframework.security.crypto.password.PasswordEncoder"/>
<fullyQualifiedTypeName name="org.springframework.security.crypto.password.NoOpPasswordEncoder"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
<fullyQualifiedTypeName name="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
</qualifiedTypeNameHistroy>
